//JULIA

using Plots
using DifferentialEquations

const N = 777
const N0 = 1

T1 = (0, 30)

T2 = (0, 0.2)

u0 = [N0]

# 1 случай (alpha1 >> alpha2)

function F1(du, u, p, t)
     du[1] = (0.99 + 0.00012*u[1])*(N - u[1])
end

prob1 = ODEProblem(F1, u0, T1)
sol1 = solve(prob1, dtmax=0.1)

plt1 = plot(sol1, color=:red, title="Распространение рекламы, 1 случай", legend=false, xlabel="t", ylabel="N(t)")

savefig(plt1, "Julia1.png")

# 2 случай (alpha1 << alpha2)

maxx = [-10000.0, 0]

function F2(du, u, p, t)
    du[1] = (0.000067 + 0.38*u[1])*(N - u[1])

    if du[1] > maxx[1]
        maxx[1] = du[1]
        maxx[2] = t
    end
end

prob2 = ODEProblem(F2, u0, T2)
sol2 = solve(prob2, dtmax=0.001)

println("t = ", maxx[2])

plt2 = plot(sol2, color=:red, title="Распространение рекламы, 2 случай", legend=false, xlabel="t", ylabel="N(t)")

savefig(plt2, "Julia2.png")

# 3 случай (alpha1, alpha2 - периодические функции)

function F3(du, u, p, t)
    du[1] = (0.6*sin(4*t) + 0.1*cos(2*t)*u[1])*(N - u[1])
end

prob3 = ODEProblem(F3, u0, T2)
sol3 = solve(prob3, dtmax=0.001)

plt3 = plot(sol3, color=:red, title="Распространение рекламы, 3 случай", legend=false, xlabel="t", ylabel="N(t)")

savefig(plt3, "Julia3.png")


// OPENMODELICA

model Lab07
parameter Real N = 777;
parameter Real N0 = 1;
Real n(start=N0);
equation
// 1 случай
der(n) = (0.99 + 0.00012 *n) * (N-n);
// 2 случай
//der(n) = (0.000067 + 0.38 *n) * (N-n);
// 3 случай
//der(n) = (0.6 *sin(4t) + 0.1 *cosn(2t) *n) * (N-n);
end Lab07;